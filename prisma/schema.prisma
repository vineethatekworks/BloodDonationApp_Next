// This isyourPrismaschemafile,
//learnmoreaboutitinthedocs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserProfile {
  id                  String      @id @default(uuid())
  full_name           String
  email               String      @unique
  password            String
  contact             String?
  blood_group         BloodGroup?
  location            String?
  role                Role        @default(DONOR)
  available_to_donate Boolean     @default(false)
  last_donated_at     DateTime?
  created_at          DateTime    @default(now())
  updated_at          DateTime    @updatedAt

  // Relations
  auth          UserAuth?      @relation
  bloodRequests BloodRequest[] @relation("RecipientRequests")

  @@map("user_profile")
}

model UserAuth {
  user_id                   String    @id
  isVerified                Boolean   @default(false)
  role                      Role      @default(DONOR)
  verifytoken               String?
  verifytokenexpiry         DateTime?
  forgotpasswordtoken       String?
  forgotpasswordtokenexpiry DateTime?

  // Foreign key relation
  userProfile UserProfile @relation(fields: [user_id], references: [id])

  @@map("user_auth")
}

enum BloodGroup {
  A_POS  @map("A+")
  A_NEG  @map("A-")
  B_POS  @map("B+")
  B_NEG  @map("B-")
  AB_POS @map("AB+")
  AB_NEG @map("AB-")
  O_POS  @map("O+")
  O_NEG  @map("O-")
}

enum Role {
  DONOR
  RECIPIENT
  ADMIN
}

model BloodRequest {
  BloodRequest_id String        @id @default(uuid())
  recipientId     String
  blood_group     BloodGroup
  units_needed    Int
  reason          String?
  location        String
  status          RequestStatus @default(PENDING)
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt

  recipient UserProfile @relation("RecipientRequests", fields: [recipientId], references: [id])

  @@map("blood_request")
}

enum RequestStatus {
  PENDING
  ACCEPTED
  CANCELLED
  COMPLETED
}
